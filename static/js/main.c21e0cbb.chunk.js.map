{"version":3,"sources":["config.js","components/HeroImage.js","components/SearchBar.js","components/Movies.js","components/Spinner.js","App.js","components/Header.js","components/NotFound.js","components/Navigation.js","components/Movie.js","components/Router.js","serviceWorker.js","index.js"],"names":["API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","image","title","react_default","a","createElement","className","style","width","background","concat","SearchBar","state","value","timeout","search","e","searchItems","_this","setState","target","clearTimeout","setTimeout","type","name","placeholder","onChange","this","React","Component","Movies","clickable","movkey","movieName","movie","Link","to","pathname","height","borderBottom","src","poster_path","alt","length","substring","Spinner","App","movies","heroImage","loading","currentPage","totalPages","searchTerm","componentDidMount","localStorage","getItem","JSON","parse","Object","objectSpread","endpoint","loadData","loadMoreItems","_callee","api_call","data","regenerator_default","wrap","_context","prev","next","fetch","sent","json","toConsumableArray","results","page","total_pages","setItem","stringify","stop","_this2","components_HeroImage","backdrop_path","original_title","components_SearchBar","keys","map","key","components_Movies","id","components_Spinner","onClick","Header","color","textDecoration","NotFound","textAlign","Navigation","movieTitle","Movie","activeMovie","directors","actors","genres","movieId","match","params","_callee3","_context3","status_code","asyncToGenerator","mark","_callee2","_context2","crew","filter","member","job","cast","_this$state","genre","i","director","actor","slice","Fragment","components_Navigation","release_date","runtime","overview","Router","BrowserRouter","components_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c21e0cbb.chunk.js","sourcesContent":["const API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"dc0bad0bf93f7c92b544f119e245de37\";\n\nconst IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/\";\n\nconst BACKDROP_SIZE = \"w1280\";\n\nconst POSTER_SIZE = \"w500\";\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../config\";\n\nimport \"../styles/HeroImage.css\";\n\nconst HeroImage = props => {\n  const { image, title } = props;\n  return (\n    <div\n      className=\"heroImage\"\n      style={{\n        width: \"100%\",\n        background: `linear-gradient(to bottom, rgba(0,0,0,0.01) 30%, rgba(0,0,0,0.08) 49%, rgba(0,0,0,0.40) 61%,rgba(0,0,0,1) 95%),\n        url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${image}')`\n      }}\n    >\n      <div className=\"heroImage-content\">\n        <div className=\"heroImage-text\">\n          <h1>{title}</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeroImage.propTypes = {\n  title: PropTypes.string,\n  image: PropTypes.string\n};\n\nexport default HeroImage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  state = {\n    value: \"\"\n  };\n\n  static propTypes = {\n    searchItems: PropTypes.func\n  };\n\n  timeout = null;\n\n  search = e => {\n    const { searchItems } = this.props;\n    this.setState({\n      value: e.target.value\n    });\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      searchItems(this.state.value);\n    }, 500);\n  };\n\n  render() {\n    return (\n      <div className=\"searchbar\">\n        <div className=\"searchbar-content\">\n          <form>\n            <input\n              type=\"text\"\n              name=\"movie\"\n              className=\"searchbar-input\"\n              placeholder=\"Search movies\"\n              onChange={this.search}\n            />\n            <button>Search</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../styles/Movies.css\";\n\nconst Movies = props => {\n  const { clickable, movkey, movieName, movie } = props;\n  return (\n    <div className=\"movies-content col-lg-4 col-md-6\">\n      {clickable ? (\n        <Link to={{ pathname: `/${movkey}`, movieName: `${movieName}` }}>\n          <div className=\"movie__box\">\n            <img\n              style={{\n                height: \"450px\",\n                width: \"100%\",\n                borderBottom: \"2px solid #f5821e\"\n              }}\n              src={\n                movie.poster_path\n                  ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                  : \"/Movies_App/images/no_image.jpg\"\n              }\n              alt={movie.title}\n            />\n            <div className=\"movie__text\">\n              <h3>\n                {movie.title.length < 20\n                  ? `${movie.title}`\n                  : `${movie.title.substring(0, 25)}...`}\n              </h3>\n            </div>\n          </div>\n        </Link>\n      ) : (\n        <div className=\"movie__box\">\n          <img\n            style={{ height: \"450px\", width: \"100%\" }}\n            src={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : \"./images/no_image.jpg\"\n            }\n            alt={movie.title}\n          />\n          <div className=\"movie__text\">\n            <h3>\n              {movie.title.length < 20\n                ? `${movie.title}`\n                : `${movie.title.substring(0, 25)}...`}\n            </h3>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  clickable: PropTypes.bool,\n  movkey: PropTypes.number,\n  movieName: PropTypes.string,\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string\n  })\n};\n\nexport default Movies;\n","import React from \"react\";\nimport \"../styles/Spinner.css\";\n\nconst Spinner = () => {\n  return <div className=\"loader\" />;\n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"./config\";\nimport \"./App.css\";\nimport HeroImage from \"./components/HeroImage\";\nimport SearchBar from \"./components/SearchBar\";\nimport Movies from \"./components/Movies\";\nimport Spinner from \"./components/Spinner\";\n\nclass App extends Component {\n  state = {\n    movies: [],\n    heroImage: \"\",\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: \"\"\n  };\n\n  componentDidMount = () => {\n    if (localStorage.getItem(\"HomeState\")) {\n      const state = JSON.parse(localStorage.getItem(\"HomeState\"));\n      this.setState({ ...state });\n    } else {\n      this.setState({\n        loading: true\n      });\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.loadData(endpoint);\n    }\n  };\n\n  loadMoreItems = () => {\n    let endpoint = \"\";\n    this.setState({ loading: true });\n    if (this.state.searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\n        .state.currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${\n        this.state.searchTerm\n      }&language=en-US&page=${this.state.currentPage + 1}`;\n    }\n    this.loadData(endpoint);\n  };\n\n  searchItems = searchTerm => {\n    this.setState({\n      loading: true,\n      movies: [],\n      searchTerm\n    });\n\n    let endpoint;\n    if (this.state.searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}`;\n    }\n    this.loadData(endpoint);\n  };\n\n  loadData = async endpoint => {\n    const api_call = await fetch(endpoint);\n    const data = await api_call.json();\n    this.setState(\n      {\n        movies: [...this.state.movies, ...data.results],\n        heroImage: this.state.heroImage || data.results[0],\n        loading: false,\n        currentPage: data.page,\n        totalPages: data.total_pages\n      },\n      () => {\n        if (this.state.searchTerm === \"\") {\n          localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\n        }\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.heroImage ? (\n          <div className=\"heroImage\">\n            <HeroImage\n              image={this.state.heroImage.backdrop_path}\n              title={this.state.heroImage.original_title}\n            />\n            <SearchBar searchItems={this.searchItems} />\n          </div>\n        ) : null}\n        <div className=\"result\">\n          <h1>\n            {this.state.searchTerm === \"\" && !this.state.loading\n              ? \"Popular Movies\"\n              : \"Search Results\"}\n          </h1>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            {Object.keys(this.state.movies).map(key => (\n              <Movies\n                key={key}\n                movie={this.state.movies[key]}\n                movieName={this.state.movies[key].original_title}\n                movkey={this.state.movies[key].id}\n                clickable={true}\n              />\n            ))}\n          </div>\n        </div>\n        {this.state.loading ? <Spinner /> : null}\n        {this.state.currentPage <= this.state.totalPages &&\n        !this.state.loading ? (\n          <div className=\"container\">\n            <button\n              className=\"loading-button col-xs-12\"\n              onClick={this.loadMoreItems}\n            >\n              Load More\n            </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header className=\"App-header\">\n      <Link\n        to=\"/Movies_App\"\n        className=\"navigation-link\"\n        style={{ color: \"#f5821e\", textDecoration: \"none\" }}\n      >\n        <h1 className=\"App-title\">Movies App</h1>\n      </Link>\n    </header>\n  );\n};\nexport default Header;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"container\">\n      <h1 style={{ textAlign: \"center\", color: \"#fff\" }}>\n        This page does not exist.\n      </h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Navigation.css\";\n\nconst Navigation = props => {\n  const { movieTitle } = props;\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-content\">\n        <Link to=\"/Movies_App\" className=\"navigation-link\">\n          <p>Home</p>\n        </Link>\n        <p>/</p>\n        <p>{movieTitle}</p>\n      </div>\n    </div>\n  );\n};\n\nNavigation.propTypes = {\n  movieTitle: PropTypes.string\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n} from \"../config\";\nimport Navigation from \"./Navigation\";\nimport \"../styles/Movie.css\";\nimport Spinner from \"./Spinner\";\n\nclass Movie extends React.Component {\n  state = {\n    loading: false,\n    activeMovie: [],\n    directors: [],\n    actors: [],\n    genres: []\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount = async () => {\n    const movieId = this.props.match.params.movieId;\n    if (localStorage.getItem(`${movieId}`)) {\n      const state = JSON.parse(localStorage.getItem(`${movieId}`));\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&langyage=en-US`;\n      this.loadData(endpoint);\n    }\n  };\n\n  loadData = async endpoint => {\n    const movieId = this.props.match.params.movieId;\n    const api_call = await fetch(endpoint);\n    const data = await api_call.json();\n    if (data.status_code) {\n      this.setState({ loading: false });\n    } else {\n      this.setState(\n        {\n          activeMovie: data,\n          genres: data.genres\n        },\n        async () => {\n          const endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n          const api_call = await fetch(endpoint);\n          const data = await api_call.json();\n          const directors = data.crew.filter(\n            member => member.job === \"Director\"\n          );\n          this.setState(\n            {\n              actors: data.cast,\n              directors,\n              loading: false\n            },\n            () => {\n              localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n            }\n          );\n        }\n      );\n    }\n  };\n\n  render() {\n    const { genres, activeMovie, directors, loading } = this.state;\n\n    const genre = genres.map((genre, i) => {\n      return <p key={i}>{genre.name}</p>;\n    });\n\n    const director = directors.map((director, i) => {\n      return <p key={i}>{director.name}</p>;\n    });\n    const actors = [...this.state.actors];\n    const newActors = actors.slice(0, 4);\n    const actor = newActors.map((actor, i) => {\n      return <p key={i}>{actor.name}</p>;\n    });\n\n    return (\n      <div className=\"movie\">\n        <div className=\"container\">\n          {activeMovie ? (\n            <React.Fragment>\n              <Navigation movieTitle={activeMovie.original_title} />\n              <h1>{activeMovie.original_title}</h1>\n              <div\n                className=\"movieinfo container\"\n                style={{\n                  background: activeMovie.backdrop_path\n                    ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n                        activeMovie.backdrop_path\n                      }')`\n                    : \"#000000\"\n                }}\n              />\n            </React.Fragment>\n          ) : null}\n\n          {loading ? <Spinner /> : null}\n          {activeMovie ? (\n            <div className=\"details container\">\n              <div className=\"row\">\n                <div className=\"col-lg-8 col-xs-12\">\n                  <h2>More Information About {activeMovie.original_title}</h2>\n                  <div className=\"movie-content\">\n                    <p>Release Date: </p>\n                    <p>{activeMovie.release_date}</p>\n                  </div>\n                  <div className=\"movie-content\">\n                    <p>Duration: </p>\n                    <p> {activeMovie.runtime} minutes</p>\n                  </div>\n                  <p className=\"movie-overview\">{activeMovie.overview}</p>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Genre:</p>\n                      {genre}\n                    </div>\n                  </div>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Original Title: </p>\n                      <p>{activeMovie.original_title}</p>\n                    </div>\n                  </div>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Director:</p>\n                      {director}\n                    </div>\n                  </div>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Actors:</p>\n                      {actor}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-4\">\n                  <img\n                    style={{\n                      height: \"450px\",\n                      width: \"100%\",\n                      borderBottom: \"2px solid #f5821e\"\n                    }}\n                    src={\n                      activeMovie.poster_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${\n                            activeMovie.poster_path\n                          }`\n                        : \"./images/no_image.jpg\"\n                    }\n                    alt={activeMovie.title}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"../App\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Movie from \"./Movie\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/Movies_App\" component={App} />\n          <Route path=\"/:movieId\" component={Movie} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport Router from \"./components/Router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}