{"version":3,"sources":["config.js","components/HeroImage.js","components/SearchBar.js","components/Movies.js","components/Spinner.js","App.js","components/Header.js","components/NotFound.js","components/Navigation.js","components/Movie.js","components/Router.js","serviceWorker.js","index.js"],"names":["API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","react_default","a","createElement","className","style","width","background","concat","image","title","SearchBar","state","value","timeout","search","e","_this","setState","target","clearTimeout","setTimeout","searchItems","type","name","placeholder","onChange","this","React","Component","Movies","clickable","Link","to","pathname","movkey","movieName","height","borderBottom","src","movie","poster_path","alt","length","substring","Spinner","App","movies","heroImage","loading","currentPage","totalPages","searchTerm","componentDidMount","localStorage","getItem","JSON","parse","Object","objectSpread","endpoint","loadData","loadMoreItems","_callee","api_call","data","regenerator_default","wrap","_context","prev","next","fetch","sent","json","toConsumableArray","results","page","total_pages","setItem","stringify","stop","_this2","components_HeroImage","backdrop_path","original_title","components_SearchBar","keys","map","key","components_Movies","id","components_Spinner","onClick","Header","NotFound","textAlign","color","Navigation","movieTitle","Movie","activeMovie","directors","actors","genres","match","params","movieId","_callee3","_context3","status_code","asyncToGenerator","mark","_callee2","_context2","crew","filter","member","job","cast","genre","i","director","actor","slice","Fragment","components_Navigation","release_date","runtime","overview","Router","BrowserRouter","components_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef880ae0.chunk.js","sourcesContent":["const API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"dc0bad0bf93f7c92b544f119e245de37\";\n\nconst IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/\";\n\nconst BACKDROP_SIZE = \"w1280\";\n\nconst POSTER_SIZE = \"w500\";\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../config\";\n\nimport \"../styles/HeroImage.css\";\n\nconst HeroImage = props => {\n  return (\n    <div\n      className=\"heroImage\"\n      style={{\n        width: \"100%\",\n        background: `linear-gradient(to bottom, rgba(0,0,0,0.01) 30%, rgba(0,0,0,0.08) 49%, rgba(0,0,0,0.40) 61%,rgba(0,0,0,1) 95%),\n        url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.image}')`\n      }}\n    >\n      <div className=\"heroImage-content\">\n        <div className=\"heroImage-text\">\n          <h1>{props.title}</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeroImage.propTypes = {\n  title: PropTypes.string,\n  image: PropTypes.string\n};\n\nexport default HeroImage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  state = {\n    value: \"\"\n  };\n\n  static propTypes = {\n    searchItems: PropTypes.func\n  };\n\n  timeout = null;\n\n  search = e => {\n    this.setState({\n      value: e.target.value\n    });\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.props.searchItems(this.state.value);\n    }, 500);\n  };\n\n  render() {\n    return (\n      <div className=\"searchbar\">\n        <div className=\"searchbar-content\">\n          <form>\n            <input\n              type=\"text\"\n              name=\"movie\"\n              className=\"searchbar-input\"\n              placeholder=\"Search movies\"\n              onChange={this.search}\n            />\n            <button>Search</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../styles/Movies.css\";\n\nconst Movies = props => {\n  return (\n    <div className=\"movies-content col-lg-4 col-md-6\">\n      {props.clickable ? (\n        <Link\n          to={{ pathname: `/${props.movkey}`, movieName: `${props.movieName}` }}\n        >\n          <div className=\"movie__box\">\n            <img\n              style={{\n                height: \"450px\",\n                width: \"100%\",\n                borderBottom: \"2px solid #f5821e\"\n              }}\n              src={\n                props.movie.poster_path\n                  ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\n                  : \"/Movies_App/images/no_image.jpg\"\n              }\n              alt={props.movie.title}\n            />\n            <div className=\"movie__text\">\n              <h3>\n                {props.movie.title.length < 20\n                  ? `${props.movie.title}`\n                  : `${props.movie.title.substring(0, 25)}...`}\n              </h3>\n            </div>\n          </div>\n        </Link>\n      ) : (\n        <div className=\"movie__box\">\n          <img\n            style={{ height: \"450px\", width: \"100%\" }}\n            src={\n              props.movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\n                : \"./images/no_image.jpg\"\n            }\n            alt={props.movie.title}\n          />\n          <div className=\"movie__text\">\n            <h3>\n              {props.movie.title.length < 20\n                ? `${props.movie.title}`\n                : `${props.movie.title.substring(0, 25)}...`}\n            </h3>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  clickable: PropTypes.bool,\n  movkey: PropTypes.number,\n  movieName: PropTypes.string,\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string\n  })\n};\n\nexport default Movies;\n","import React from \"react\";\nimport \"../styles/Spinner.css\";\n\nconst Spinner = () => {\n  return <div className=\"loader\" />;\n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"./config\";\nimport \"./App.css\";\nimport HeroImage from \"./components/HeroImage\";\nimport SearchBar from \"./components/SearchBar\";\nimport Movies from \"./components/Movies\";\nimport Spinner from \"./components/Spinner\";\n\nclass App extends Component {\n  state = {\n    movies: [],\n    heroImage: \"\",\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: \"\"\n  };\n\n  componentDidMount = () => {\n    if (localStorage.getItem(\"HomeState\")) {\n      const state = JSON.parse(localStorage.getItem(\"HomeState\"));\n      this.setState({ ...state });\n    } else {\n      this.setState({\n        loading: true\n      });\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.loadData(endpoint);\n    }\n  };\n\n  loadMoreItems = () => {\n    let endpoint = \"\";\n    this.setState({ loading: true });\n    if (this.state.searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\n        .state.currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${\n        this.state.searchTerm\n      }&language=en-US&page=${this.state.currentPage + 1}`;\n    }\n    this.loadData(endpoint);\n  };\n\n  searchItems = searchTerm => {\n    this.setState({\n      loading: true,\n      movies: [],\n      searchTerm\n    });\n\n    let endpoint;\n    if (this.state.searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}`;\n    }\n    this.loadData(endpoint);\n  };\n\n  loadData = async endpoint => {\n    const api_call = await fetch(endpoint);\n    const data = await api_call.json();\n    this.setState(\n      {\n        movies: [...this.state.movies, ...data.results],\n        heroImage: this.state.heroImage || data.results[0],\n        loading: false,\n        currentPage: data.page,\n        totalPages: data.total_pages\n      },\n      () => {\n        if (this.state.searchTerm === \"\") {\n          localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\n        }\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.heroImage ? (\n          <div className=\"heroImage\">\n            <HeroImage\n              image={this.state.heroImage.backdrop_path}\n              title={this.state.heroImage.original_title}\n            />\n            <SearchBar searchItems={this.searchItems} />\n          </div>\n        ) : null}\n        <div className=\"result\">\n          <h1>\n            {this.state.searchTerm === \"\" && !this.state.loading\n              ? \"Popular Movies\"\n              : \"Search Results\"}\n          </h1>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            {Object.keys(this.state.movies).map(key => (\n              <Movies\n                key={key}\n                movie={this.state.movies[key]}\n                movieName={this.state.movies[key].original_title}\n                movkey={this.state.movies[key].id}\n                clickable={true}\n              />\n            ))}\n          </div>\n        </div>\n        {this.state.loading ? <Spinner /> : null}\n        {this.state.currentPage <= this.state.totalPages &&\n        !this.state.loading ? (\n          <div className=\"container\">\n            <button\n              className=\"loading-button col-xs-12\"\n              onClick={this.loadMoreItems}\n            >\n              Load More\n            </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header className=\"App-header\">\n      <h1 className=\"App-title\">Movies App</h1>\n    </header>\n  );\n};\nexport default Header;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"container\">\n      <h1 style={{ textAlign: \"center\", color: \"#fff\" }}>\n        This page does not exist.\n      </h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Navigation.css\";\n\nconst Navigation = props => {\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-content\">\n        <Link to=\"/Movies_App\" className=\"navigation-link\">\n          <p>Home</p>\n        </Link>\n        <p>/</p>\n        <p>{props.movieTitle}</p>\n      </div>\n    </div>\n  );\n};\n\nNavigation.propTypes = {\n  movieTitle: PropTypes.string\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n} from \"../config\";\nimport Navigation from \"./Navigation\";\nimport \"../styles/Movie.css\";\nimport Spinner from \"./Spinner\";\n\nclass Movie extends React.Component {\n  state = {\n    loading: false,\n    activeMovie: [],\n    directors: [],\n    actors: [],\n    genres: []\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount = async () => {\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\n      const state = JSON.parse(\n        localStorage.getItem(`${this.props.match.params.movieId}`)\n      );\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      const endpoint = `${API_URL}movie/${\n        this.props.match.params.movieId\n      }?api_key=${API_KEY}&langyage=en-US`;\n      this.loadData(endpoint);\n    }\n  };\n\n  loadData = async endpoint => {\n    const api_call = await fetch(endpoint);\n    const data = await api_call.json();\n    if (data.status_code) {\n      this.setState({ loading: false });\n    } else {\n      this.setState(\n        {\n          activeMovie: data,\n          genres: data.genres\n        },\n        async () => {\n          const endpoint = `${API_URL}movie/${\n            this.props.match.params.movieId\n          }/credits?api_key=${API_KEY}`;\n          const api_call = await fetch(endpoint);\n          const data = await api_call.json();\n          const directors = data.crew.filter(\n            member => member.job === \"Director\"\n          );\n          this.setState(\n            {\n              actors: data.cast,\n              directors,\n              loading: false\n            },\n            () => {\n              localStorage.setItem(\n                `${this.props.match.params.movieId}`,\n                JSON.stringify(this.state)\n              );\n            }\n          );\n        }\n      );\n    }\n  };\n\n  render() {\n    const genres = this.state.genres;\n    const genre = genres.map((genre, i) => {\n      return <p key={i}>{genre.name}</p>;\n    });\n\n    const activeMovie = this.state.activeMovie;\n    const director = this.state.directors.map((director, i) => {\n      return <p key={i}>{director.name}</p>;\n    });\n    const actors = [...this.state.actors];\n    const newActors = actors.slice(0, 4);\n    const actor = newActors.map((actor, i) => {\n      return <p key={i}>{actor.name}</p>;\n    });\n\n    return (\n      <div className=\"movie\">\n        <div className=\"container\">\n          {this.state.activeMovie ? (\n            <React.Fragment>\n              <Navigation movieTitle={activeMovie.original_title} />\n              <h1>{activeMovie.original_title}</h1>\n              <div\n                className=\"movieinfo container\"\n                style={{\n                  background: activeMovie.backdrop_path\n                    ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n                        activeMovie.backdrop_path\n                      }')`\n                    : \"#000000\"\n                }}\n              />\n            </React.Fragment>\n          ) : null}\n\n          {this.state.loading ? <Spinner /> : null}\n          {this.state.activeMovie ? (\n            <div className=\"details container\">\n              <div className=\"row\">\n                <div className=\"col-lg-8 col-xs-12\">\n                  <h2>More Information About {activeMovie.original_title}</h2>\n                  <div className=\"movie-content\">\n                    <p>Release Date: </p>\n                    <p>{activeMovie.release_date}</p>\n                  </div>\n                  <div className=\"movie-content\">\n                    <p>Duration: </p>\n                    <p> {activeMovie.runtime} minutes</p>\n                  </div>\n                  <p className=\"movie-overview\">{activeMovie.overview}</p>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Genre:</p>\n                      <p>{genre}</p>\n                    </div>\n                  </div>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Original Title: </p>\n                      <p>{activeMovie.original_title}</p>\n                    </div>\n                  </div>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Director:</p>\n                      <p>{director}</p>\n                    </div>\n                  </div>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Actors:</p>\n                      <p>{actor}</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-4\">\n                  <img\n                    style={{\n                      height: \"450px\",\n                      width: \"100%\",\n                      borderBottom: \"2px solid #f5821e\"\n                    }}\n                    src={\n                      activeMovie.poster_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${\n                            activeMovie.poster_path\n                          }`\n                        : \"./images/no_image.jpg\"\n                    }\n                    alt={activeMovie.title}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"../App\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Movie from \"./Movie\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/Movies_App\" component={App} />\n          <Route path=\"/:movieId\" component={Movie} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport Router from \"./components/Router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}