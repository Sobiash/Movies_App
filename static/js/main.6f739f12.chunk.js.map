{"version":3,"sources":["reducers/movie_reducer.js","actions/types.js","reducers/movies_reducer.js","reducers/index.js","store.js","config.js","components/HeroImage.js","components/SearchBar.js","components/Movies.js","components/Spinner.js","App.js","actions/Actions.js","containers/MoviesContainer.js","components/Header.js","components/NotFound.js","components/Navigation.js","components/Movie.js","containers/MovieContainer.js","components/Router.js","index.js"],"names":["initialState","loading","activeMovie","directors","actors","genres","MovieReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","movies","heroImage","currentPage","totalPages","searchTerm","MoviesReducer","results","page","total_pages","toConsumableArray","concat","rootReducer","combineReducers","movie","middleware","thunk","store","createStore","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","image","title","react_default","a","createElement","className","style","width","background","SearchBar","value","timeout","search","e","searchItems","_this","setState","target","clearTimeout","setTimeout","name","placeholder","onChange","this","React","Component","Movies","clickable","movkey","movieName","Link","to","pathname","height","borderBottom","src","poster_path","alt","substring","Spinner","App","_ref","searchMovies","loadMoreMovies","components_HeroImage","backdrop_path","original_title","components_SearchBar","keys","map","key","components_Movies","id","components_Spinner","onClick","loadingSpinner","MoviesContainer","componentDidMount","sessionStorage","getItem","JSON","parse","moviesPersistedState","getMovies","componentDidUpdate","setItem","stringify","getPopularMovies","clearMovies","_this$props","src_App_0","assign","mapDispatchToProps","dispatch","endpoint","fetch","then","data","json","connect","Header","color","textDecoration","NotFound","textAlign","Navigation","movieTitle","Movie","genre","i","director","actor","slice","Fragment","components_Navigation","release_date","runtime","overview","MovieContainer","movieId","match","params","moviePersistedState","getMovie","clearMovie","components_Movie","data1","endpoint1","data2","crew","filter","member","job","cast","Router","BrowserRouter","components_Header","Switch","Route","exact","path","component","ReactDOM","render","es","components_Router","document","getElementById"],"mappings":"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","file":"static/js/main.6f739f12.chunk.js","sourcesContent":["import {\n  GET_MOVIE,\n  MOVIE_CREW,\n  SHOW_LOADING_SPINNER,\n  CLEAR_MOVIE,\n  MOVIE_PERSISTED_STATE\n} from \"../actions/types\";\n\nconst initialState = {\n  loading: false,\n  activeMovie: [],\n  directors: [],\n  actors: [],\n  genres: []\n};\n\nconst MovieReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MOVIE_PERSISTED_STATE:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case GET_MOVIE:\n      return {\n        ...state,\n        activeMovie: action.payload.activeMovie,\n        genres: action.payload.genres,\n        loading: false\n      };\n    case MOVIE_CREW:\n      return {\n        ...state,\n        actors: action.payload.actors,\n        directors: action.payload.directors,\n        loading: false\n      };\n    case SHOW_LOADING_SPINNER:\n      return {\n        ...state,\n        loading: true\n      };\n    case CLEAR_MOVIE:\n      return {\n        ...state,\n        activeMovie: [],\n        directors: [],\n        actors: [],\n        genres: []\n      };\n    default:\n      return state;\n  }\n};\n\nexport default MovieReducer;\n","export const GET_POPULAR_MOVIES = \"GET_POPULAR_MOVIES\";\n\nexport const SEARCH_MOVIES = \"SEARCH_MOVIES\";\n\nexport const LOAD_MORE_MOVIES = \"LOAD_MORE_MOVIES\";\n\nexport const CLEAR_MOVIES = \"CLEAR_MOVIES\";\n\nexport const SHOW_LOADING_SPINNER = \"SHOW_LOADING_SPINNER\";\n\nexport const MOVIES_PERSISTED_STATE = \"MOVIES_PERSISTED_STATE\";\n\nexport const GET_MOVIE = \"GET_MOVIE\";\n\nexport const MOVIE_CREW = \"MOVIE_CREW\";\n\nexport const CLEAR_MOVIE = \"CLEAR_MOVIE\";\n\nexport const MOVIE_PERSISTED_STATE = \"MOVIE_PERSISTED_STATE\";\n","import {\n  GET_POPULAR_MOVIES,\n  SEARCH_MOVIES,\n  LOAD_MORE_MOVIES,\n  CLEAR_MOVIES,\n  SHOW_LOADING_SPINNER,\n  MOVIES_PERSISTED_STATE\n} from \"../actions/types\";\n\nconst initialState = {\n  movies: [],\n  heroImage: \"\",\n  loading: false,\n  currentPage: 0,\n  totalPages: 0,\n  searchTerm: \"\"\n};\n\nconst MoviesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MOVIES_PERSISTED_STATE:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case GET_POPULAR_MOVIES:\n      return {\n        ...state,\n        movies: action.payload.results,\n        heroImage: state.heroImage || action.payload.results[0],\n        loading: false,\n        currentPage: action.payload.page,\n        totalPages: action.payload.total_pages,\n        searchTerm: \"\"\n      };\n    case LOAD_MORE_MOVIES:\n      return {\n        ...state,\n        movies: [...state.movies, ...action.payload.results],\n        loading: false,\n        currentPage: action.payload.page,\n        totalPages: action.payload.total_pages\n      };\n    case SEARCH_MOVIES:\n      return {\n        ...state,\n        movies: action.payload.results,\n        loading: false,\n        currentPage: action.payload.page,\n        totalPages: action.payload.total_pages,\n        searchTerm: action.payload.searchTerm\n      };\n    case CLEAR_MOVIES:\n      return {\n        ...state,\n        movies: []\n      };\n    case SHOW_LOADING_SPINNER:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default MoviesReducer;\n","import { combineReducers } from \"redux\";\nimport MovieReducer from \"./movie_reducer\";\nimport MoviesReducer from \"./movies_reducer\";\n\nconst rootReducer = combineReducers({\n  movie: MovieReducer,\n  movies: MoviesReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","const API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"dc0bad0bf93f7c92b544f119e245de37\";\n\nconst IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/\";\n\nconst BACKDROP_SIZE = \"w1280\";\n\nconst POSTER_SIZE = \"w500\";\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../config\";\n\nimport \"../styles/HeroImage.css\";\n\nconst HeroImage = props => {\n  const { image, title } = props;\n  return (\n    <div\n      className=\"heroImage\"\n      style={{\n        width: \"100%\",\n        background: `linear-gradient(to bottom, rgba(0,0,0,0.01) 30%, rgba(0,0,0,0.08) 49%, rgba(0,0,0,0.40) 61%,rgba(0,0,0,1) 95%),\n        url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${image}')`\n      }}\n    >\n      <div className=\"heroImage-content\">\n        <div className=\"heroImage-text\">\n          <h1>{title}</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeroImage.propTypes = {\n  title: PropTypes.string,\n  image: PropTypes.string\n};\n\nexport default HeroImage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  state = {\n    value: \"\"\n  };\n\n  static propTypes = {\n    searchItems: PropTypes.func\n  };\n\n  timeout = null;\n\n  search = e => {\n    const { searchItems } = this.props;\n    this.setState({\n      value: e.target.value\n    });\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      searchItems(this.state.value);\n    }, 500);\n  };\n\n  render() {\n    return (\n      <div className=\"searchbar\">\n        <div className=\"searchbar-content\">\n          <form>\n            <input\n              type=\"text\"\n              name=\"movie\"\n              className=\"searchbar-input\"\n              placeholder=\"Search movies\"\n              onChange={this.search}\n            />\n            <button>Search</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../styles/Movies.css\";\n\nconst Movies = props => {\n  const { clickable, movkey, movieName, movie } = props;\n  return (\n    <div className=\"movies-content col-lg-4 col-md-6\">\n      {clickable ? (\n        <Link to={{ pathname: `/${movkey}`, movieName: `${movieName}` }}>\n          <div className=\"movie__box\">\n            <img\n              style={{\n                height: \"450px\",\n                width: \"100%\",\n                borderBottom: \"2px solid #f5821e\"\n              }}\n              src={\n                movie.poster_path\n                  ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                  : \"/Movies_App/images/no_image.jpg\"\n              }\n              alt={movie.title}\n            />\n            <div className=\"movie__text\">\n              <h3>\n                {movie.title.length < 20\n                  ? `${movie.title}`\n                  : `${movie.title.substring(0, 25)}...`}\n              </h3>\n            </div>\n          </div>\n        </Link>\n      ) : (\n        <div className=\"movie__box\">\n          <img\n            style={{ height: \"450px\", width: \"100%\" }}\n            src={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : \"./images/no_image.jpg\"\n            }\n            alt={movie.title}\n          />\n          <div className=\"movie__text\">\n            <h3>\n              {movie.title.length < 20\n                ? `${movie.title}`\n                : `${movie.title.substring(0, 25)}...`}\n            </h3>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  clickable: PropTypes.bool,\n  movkey: PropTypes.number,\n  movieName: PropTypes.string\n  // movie: PropTypes.shape({\n  //   poster_path: PropTypes.string,\n  //   title: PropTypes.string\n  // })\n};\n\nexport default Movies;\n","import React from \"react\";\nimport \"../styles/Spinner.css\";\n\nconst Spinner = () => {\n  return <div className=\"loader\" />;\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport \"./App.css\";\nimport HeroImage from \"./components/HeroImage\";\nimport SearchBar from \"./components/SearchBar\";\nimport Movies from \"./components/Movies\";\nimport Spinner from \"./components/Spinner\";\n\nconst App = ({\n  movies,\n  heroImage,\n  loading,\n  currentPage,\n  totalPages,\n  searchTerm,\n  searchMovies,\n  loadMoreMovies\n}) => {\n  // console.log(movies);\n  // console.log(heroImage);\n  // console.log(currentPage);\n  // console.log(totalPages);\n  // console.log(searchTerm);\n  // console.log(currentPage);\n  return (\n    <div className=\"App\">\n      {heroImage ? (\n        <div className=\"heroImage\">\n          <HeroImage\n            image={heroImage.backdrop_path}\n            title={heroImage.original_title}\n          />\n          <SearchBar searchItems={searchMovies} />\n        </div>\n      ) : null}\n      <div className=\"result\">\n        <h1>\n          {searchTerm === \"\" && !loading ? \"Popular Movies\" : \"Search Results\"}\n        </h1>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          {Object.keys(movies).map(key => {\n            return (\n              <Movies\n                key={key}\n                movie={movies[key]}\n                movieName={movies[key].original_title}\n                movkey={movies[key].id}\n                clickable={true}\n              />\n            );\n          })}\n        </div>\n      </div>\n      {loading ? <Spinner /> : null}\n      {currentPage <= totalPages && !loading ? (\n        <div className=\"container\">\n          <button className=\"loading-button col-xs-12\" onClick={loadMoreMovies}>\n            Load More\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n","import { API_URL, API_KEY } from \"../config\";\nimport {\n  GET_POPULAR_MOVIES,\n  SEARCH_MOVIES,\n  LOAD_MORE_MOVIES,\n  CLEAR_MOVIES,\n  SHOW_LOADING_SPINNER,\n  MOVIES_PERSISTED_STATE,\n  GET_MOVIE,\n  MOVIE_CREW,\n  CLEAR_MOVIE,\n  MOVIE_PERSISTED_STATE\n} from \"./types\";\n\nexport const getPopularMovies = () => dispatch => {\n  const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n  fetch(endpoint)\n    .then(data => data.json())\n    .then(data =>\n      dispatch({\n        type: GET_POPULAR_MOVIES,\n        payload: data\n      })\n    );\n};\n\nexport const searchMovies = searchTerm => dispatch => {\n  let endpoint;\n  if (searchTerm === \"\") {\n    endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n  } else {\n    endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}`;\n  }\n  fetch(endpoint)\n    .then(data => data.json())\n    .then(data =>\n      dispatch({\n        type: SEARCH_MOVIES,\n        payload: { ...data, searchTerm }\n      })\n    );\n};\n\nexport const loadMoreMovies = (searchTerm, currentPage) => dispatch => {\n  let endpoint;\n  if (searchTerm === \"\") {\n    endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage +\n      1}`;\n  } else {\n    endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}&language=en-US&page=${currentPage +\n      1}`;\n  }\n  fetch(endpoint)\n    .then(data => data.json())\n    .then(data =>\n      dispatch({\n        type: LOAD_MORE_MOVIES,\n        payload: data\n      })\n    );\n};\n\nexport const loadingSpinner = () => {\n  return {\n    type: SHOW_LOADING_SPINNER,\n    payload: null\n  };\n};\n\nexport const clearMovies = () => {\n  return {\n    type: CLEAR_MOVIES,\n    payload: null\n  };\n};\n\nexport const clearMovie = () => {\n  return {\n    type: CLEAR_MOVIE,\n    payload: null\n  };\n};\n\nexport const getMovie = movieId => dispatch => {\n  const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&langyage=en-US`;\n  const data1 = fetch(endpoint)\n    .then(data => data.json())\n    .then(data => {\n      dispatch({\n        type: GET_MOVIE,\n        payload: {\n          activeMovie: data,\n          genres: data.genres\n        }\n      });\n    });\n\n  const endpoint1 = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n  const data2 = fetch(endpoint1)\n    .then(data => data.json())\n    .then(data => {\n      const directors = data.crew.filter(member => member.job === \"Director\");\n      const actors = data.cast;\n      dispatch({\n        type: MOVIE_CREW,\n        payload: {\n          directors,\n          actors\n        }\n      });\n    });\n\n  return data1 && data2;\n};\n\nexport const moviesPersistedState = state => {\n  return {\n    type: MOVIES_PERSISTED_STATE,\n    payload: state\n  };\n};\n\nexport const moviePersistedState = state => {\n  return {\n    type: MOVIE_PERSISTED_STATE,\n    payload: state\n  };\n};\n","import React from \"react\";\nimport App from \"../App\";\nimport { connect } from \"react-redux\";\nimport {\n  getPopularMovies,\n  searchMovies,\n  loadMoreMovies,\n  clearMovies,\n  loadingSpinner,\n  moviesPersistedState\n} from \"../actions/Actions\";\n\nclass MoviesContainer extends React.Component {\n  componentDidMount = () => {\n    // this.getMovies();\n    if (sessionStorage.getItem(\"HomeState\")) {\n      const state = JSON.parse(sessionStorage.getItem(\"HomeState\"));\n      this.props.moviesPersistedState(state);\n    } else {\n      this.getMovies();\n    }\n  };\n\n  componentDidUpdate = () => {\n    if (this.props.movies.length > 0) {\n      if (this.props.searchTerm === \"\") {\n        sessionStorage.setItem(\"HomeState\", JSON.stringify(this.props));\n      }\n    }\n  };\n\n  getMovies = () => {\n    this.props.loadingSpinner();\n    this.props.getPopularMovies();\n  };\n\n  searchMovies = searchTerm => {\n    this.props.clearMovies();\n    this.props.loadingSpinner();\n    this.props.searchMovies(searchTerm);\n  };\n  loadMoreMovies = () => {\n    const { searchTerm, currentPage } = this.props;\n    this.props.loadingSpinner();\n    this.props.loadMoreMovies(searchTerm, currentPage);\n  };\n  render() {\n    return (\n      <App\n        {...this.props}\n        searchMovies={this.searchMovies}\n        loadMoreMovies={this.loadMoreMovies}\n      />\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  movies: state.movies.movies,\n  heroImage: state.movies.heroImage,\n  loading: state.movies.loading,\n  currentPage: state.movies.currentPage,\n  totalPages: state.movies.totalPages,\n  searchTerm: state.movies.searchTerm\n});\n\nconst mapDispatchToProps = {\n  getPopularMovies,\n  searchMovies,\n  loadMoreMovies,\n  clearMovies,\n  loadingSpinner,\n  moviesPersistedState\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MoviesContainer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header className=\"App-header\">\n      <Link\n        to=\"/Movies_App\"\n        className=\"navigation-link\"\n        style={{ color: \"#f5821e\", textDecoration: \"none\" }}\n      >\n        <h1 className=\"App-title\">Movies App</h1>\n      </Link>\n    </header>\n  );\n};\nexport default Header;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"container\">\n      <h1 style={{ textAlign: \"center\", color: \"#fff\" }}>\n        This page does not exist.\n      </h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Navigation.css\";\n\nconst Navigation = props => {\n  const { movieTitle } = props;\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-content\">\n        <Link to=\"/Movies_App\" className=\"navigation-link\">\n          <p>Home</p>\n        </Link>\n        <p>/</p>\n        <p>{movieTitle}</p>\n      </div>\n    </div>\n  );\n};\n\nNavigation.propTypes = {\n  movieTitle: PropTypes.string\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from \"../config\";\nimport Navigation from \"./Navigation\";\nimport \"../styles/Movie.css\";\nimport Spinner from \"./Spinner\";\n\nclass Movie extends React.Component {\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  render() {\n    const { genres, activeMovie, directors, actors, loading } = this.props;\n\n    const genre = genres.map((genre, i) => {\n      return <p key={i}> {genre.name} </p>;\n    });\n\n    const director = directors.map((director, i) => {\n      return <p key={i}>{director.name}</p>;\n    });\n    const actorsList = actors;\n    const newActors = actorsList.slice(0, 4);\n    const actor = newActors.map((actor, i) => {\n      return <p key={i}>{actor.name}</p>;\n    });\n\n    return (\n      <div className=\"movie\">\n        <div className=\"container\">\n          {activeMovie ? (\n            <React.Fragment>\n              <Navigation movieTitle={activeMovie.original_title} />\n              <h1>{activeMovie.original_title}</h1>\n              <div\n                className=\"movieinfo container\"\n                style={{\n                  background: activeMovie.backdrop_path\n                    ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n                        activeMovie.backdrop_path\n                      }')`\n                    : \"#000000\"\n                }}\n              />\n            </React.Fragment>\n          ) : null}\n\n          {loading ? <Spinner /> : null}\n          {activeMovie ? (\n            <div className=\"details container\">\n              <div className=\"row\">\n                <div className=\"col-lg-8 col-xs-12\">\n                  <h2>More Information About {activeMovie.original_title}</h2>\n                  <div className=\"movie-content\">\n                    <p>Release Date: </p>\n                    <p>{activeMovie.release_date}</p>\n                  </div>\n                  <div className=\"movie-content\">\n                    <p>Duration: </p>\n                    <p> {activeMovie.runtime} minutes</p>\n                  </div>\n                  <p className=\"movie-overview\">{activeMovie.overview}</p>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Genre:</p>\n                      {genre}\n                    </div>\n                  </div>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Original Title: </p>\n                      <p>{activeMovie.original_title}</p>\n                    </div>\n                  </div>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Director:</p>\n                      {director}\n                    </div>\n                  </div>\n                  <div className=\"table\">\n                    <div className=\"table-cell\">\n                      <p>Actors:</p>\n                      {actor}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-4\">\n                  <img\n                    style={{\n                      height: \"450px\",\n                      width: \"100%\",\n                      borderBottom: \"2px solid #f5821e\"\n                    }}\n                    src={\n                      activeMovie.poster_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${\n                            activeMovie.poster_path\n                          }`\n                        : \"./images/no_image.jpg\"\n                    }\n                    alt={activeMovie.title}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getMovie,\n  clearMovie,\n  moviePersistedState,\n  loadingSpinner\n} from \"../actions/Actions\";\nimport Movie from \"../components/Movie\";\n\nclass MovieContainer extends React.Component {\n  componentDidMount = () => {\n    const { movieId } = this.props.match.params;\n    if (sessionStorage.getItem(`${movieId}`)) {\n      const state = JSON.parse(sessionStorage.getItem(`${movieId}`));\n      this.props.moviePersistedState(state);\n    } else {\n      this.getMovie(movieId);\n    }\n  };\n\n  componentDidUpdate = () => {\n    const { movieId } = this.props.match.params;\n    const { activeMovie, actors, directors, genres } = this.props;\n\n    if (this.props.activeMovie) {\n      const state = { activeMovie, actors, directors, genres };\n      sessionStorage.setItem(`${movieId}`, JSON.stringify(state));\n    }\n  };\n\n  getMovie = movieId => {\n    this.props.clearMovie();\n    this.props.loadingSpinner();\n    this.props.getMovie(movieId);\n  };\n  render() {\n    return (\n      <Movie\n        activeMovie={this.props.activeMovie}\n        directors={this.props.directors}\n        actors={this.props.actors}\n        genres={this.props.genres}\n        loading={this.props.loading}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  activeMovie: state.movie.activeMovie,\n  loading: state.movie.loading,\n  actors: state.movie.actors,\n  directors: state.movie.directors,\n  genres: state.movie.genres\n});\n\nconst mapDispatchToProps = {\n  getMovie,\n  clearMovie,\n  loadingSpinner,\n  moviePersistedState\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MovieContainer);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"../containers/MoviesContainer\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport MovieContainer from \"../containers/MovieContainer\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/Movies_App\" component={App} />\n          <Route path=\"/:movieId\" component={MovieContainer} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport Router from \"./components/Router\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}